[tox]
envlist = check-copyright, black-check, isort-check, docs, flake8, mypy, py3{7,8,9,10}
labels = 
    code = py3{7,8,9,10}
    meta = check-copyright, black-check, isort-check, docs, flake8, mypy

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
deps =
    pytest<7.4.0,>=7.3.1
    pytest-cov>=4.1.0,<4.2.0
    pytest-randomly>=3.12.0,<3.13.0
    pytest-lazy-fixture<0.7.0,>=0.6.3
    mistune>=2.0.5,<2.1.0

commands =
    pytest --basetemp={envtmpdir} --doctest-modules \
        {posargs:pddl tests} \
        --cov=pddl \
        --cov-report=xml \
        --cov-report=html \
        --cov-report=term

[testenv:py{37,38,39,310}]
commands =
    {[testenv]commands}

[testenv:flake8]
skip_install = True
deps =
    flake8<6.1.0,>=6.0.0
    flake8-docstrings<1.8.0,>=1.7.0
    flake8-bugbear>=23.3.12,<23.4.0
    flake8-isort>=6.0.0,<6.1.0
commands =
    flake8 pddl tests

[testenv:mypy]
skip_install = True
deps =
    mypy>=1.3.0,<1.4.0
    types-click>=7.1.8,<7.2.0
    types-pytest-lazy-fixture>=0.6.3.3,<0.6.4.0
commands =
    mypy pddl tests

[testenv:black]
skip_install = True
deps = black<23.4.0,>=23.3.0
commands = black pddl tests

[testenv:black-check]
skip_install = True
deps = black<23.4.0,>=23.3.0
commands = black pddl tests --check --verbose

[testenv:isort]
skip_install = True
deps = isort<5.13.0,>=5.12.0
commands = isort pddl tests

[testenv:isort-check]
skip_install = True
deps = isort<5.13.0,>=5.12.0
commands = isort --check-only pddl tests

[testenv:bandit]
skipsdist = True
skip_install = True
deps = bandit>=1.7.5,<1.8.0
commands = bandit --configfile .bandit.yml --recursive pddl tests scripts

[testenv:safety]
skipsdist = False
skip_install = False
deps = safety>=2.4.0b1,<2.5.0
commands = safety check

[testenv:vulture]
skipsdist = True
skip_install = True
deps = vulture>=2.7.0,<2.8.0
commands = vulture pddl scripts/whitelist.py

[testenv:docs]
skip_install = True
deps =
    mkdocs>=1.4.3,<1.5.0
    mkdocs-material>=9.1.15,<9.2.0
    markdown-include>=0.8.1,<0.9.0
    pymdown-extensions>=10.0.1,<10.1.0
commands =
    mkdocs build --clean

[testenv:docs-serve]
skip_install = True
deps =
    mkdocs>=1.4.3,<1.5.0
    mkdocs-material>=9.1.15,<9.2.0
    markdown-include>=0.8.1,<0.9.0
    pymdown-extensions>=10.0.1,<10.1.0
commands =
    mkdocs build --clean
    python -c 'print("###### Starting local server. Press Control+C to stop server ######")'
    mkdocs serve

[testenv:check-copyright]
skip_install = True
deps =
commands = python3 scripts/check_copyright.py
